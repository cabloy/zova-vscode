{
  "name": "zova-vscode",
  "displayName": "Zova Tools",
  "description": "An extension for Zova offering commands and tools to make your experience more pleasant.",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets"
  ],
  "repository": "https://github.com/cabloy/zova-vscode",
  "homepage": "https://zova.js.org",
  "activationEvents": [
    "onStartupFinished"
  ],
  "files": [
    "dist"
  ],
  "main": "./dist/index.js",
  "icon": "assets/zova.png",
  "publisher": "cabloy",
  "license": "MIT",
  "keywords": [
    "Zova",
    "Vue",
    "Zova Framework",
    "VSCode",
    "ioc"
  ],
  "contributes": {
    "commands": [
      {
        "command": "zova.createLocalBean",
        "title": "Bean: Local",
        "category": "Zova Create"
      },
      {
        "command": "zova.createModelBean",
        "title": "Bean: Model",
        "category": "Zova Create"
      },
      {
        "command": "zova.createStoreBean",
        "title": "Bean: Store",
        "category": "Zova Create"
      },
      {
        "command": "zova.createStyleBean",
        "title": "Bean: Style",
        "category": "Zova Create"
      },
      {
        "command": "zova.createThemeBean",
        "title": "Bean: Theme",
        "category": "Zova Create"
      },
      {
        "command": "zova.createToolBean",
        "title": "Bean: Tool",
        "category": "Zova Create"
      },
      {
        "command": "zova.createGeneralBean",
        "title": "Bean: General",
        "category": "Zova Create"
      },
      {
        "command": "zova.createComponent",
        "title": "Component",
        "category": "Zova Create"
      },
      {
        "command": "zova.createPage",
        "title": "Page",
        "category": "Zova Create"
      },
      {
        "command": "zova.toolsIcons",
        "title": "Generate icons",
        "category": "Zova Tools"
      },
      {
        "command": "zova.toolsRes",
        "title": "Generate .res",
        "category": "Zova Tools"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "zova.createLocalBean",
          "when": "zova.hasZovaProject && zova.currentZovaProject"
        },
        {
          "command": "zova.createModelBean",
          "when": "zova.hasZovaProject && zova.currentZovaProject"
        },
        {
          "command": "zova.createStoreBean",
          "when": "zova.hasZovaProject && zova.currentZovaProject"
        },
        {
          "command": "zova.createStyleBean",
          "when": "zova.hasZovaProject && zova.currentZovaProject"
        },
        {
          "command": "zova.createThemeBean",
          "when": "zova.hasZovaProject && zova.currentZovaProject"
        },
        {
          "command": "zova.createToolBean",
          "when": "zova.hasZovaProject && zova.currentZovaProject"
        },
        {
          "command": "zova.createGeneralBean",
          "when": "zova.hasZovaProject && zova.currentZovaProject"
        },
        {
          "command": "zova.createComponent",
          "when": "zova.hasZovaProject && zova.currentZovaProject"
        },
        {
          "command": "zova.createPage",
          "when": "zova.hasZovaProject && zova.currentZovaProject"
        },
        {
          "command": "zova.toolsIcons",
          "when": "zova.hasZovaProject && zova.currentZovaProject"
        },
        {
          "command": "zova.toolsRes",
          "when": "zova.hasZovaProject && zova.currentZovaProject"
        }
      ],
      "explorer/context": [
        {
          "submenu": "zova.create",
          "group": "navigation",
          "when": "zova.hasZovaProject"
        },
        {
          "submenu": "zova.init",
          "group": "navigation",
          "when": "zova.hasZovaProject"
        },
        {
          "submenu": "zova.tools",
          "group": "navigation",
          "when": "zova.hasZovaProject"
        }
      ],
      "zova.create": [
        {
          "command": "zova.createLocalBean",
          "when": "zova.hasZovaProject && explorerResourceIsFolder && (resourcePath =~ /\\/module\\/[^\\/]*$/ || resourcePath =~ /\\/module-vendor\\/[^\\/]*$/ || resourcePath =~ /\\/modules\\/[^\\/]*$/ || resourcePath=~ /src\\/bean/ || resourcePath=~ /src\\/component\\/[^\\/]*$/ || resourcePath=~ /src\\/page\\/[^\\/]*$/)"
        },
        {
          "command": "zova.createModelBean",
          "when": "zova.hasZovaProject && explorerResourceIsFolder && (resourcePath =~ /\\/module\\/[^\\/]*$/ || resourcePath =~ /\\/module-vendor\\/[^\\/]*$/ || resourcePath =~ /\\/modules\\/[^\\/]*$/ || resourcePath=~ /src\\/bean/)"
        },
        {
          "command": "zova.createStoreBean",
          "when": "zova.hasZovaProject && explorerResourceIsFolder && (resourcePath =~ /\\/module\\/[^\\/]*$/ || resourcePath =~ /\\/module-vendor\\/[^\\/]*$/ || resourcePath =~ /\\/modules\\/[^\\/]*$/ || resourcePath=~ /src\\/bean/)"
        },
        {
          "command": "zova.createStyleBean",
          "when": "zova.hasZovaProject && explorerResourceIsFolder && (resourcePath =~ /\\/module\\/[^\\/]*$/ || resourcePath =~ /\\/module-vendor\\/[^\\/]*$/ || resourcePath =~ /\\/modules\\/[^\\/]*$/ || resourcePath=~ /src\\/bean/)"
        },
        {
          "command": "zova.createThemeBean",
          "when": "zova.hasZovaProject && explorerResourceIsFolder && (resourcePath =~ /\\/module\\/[^\\/]*$/ || resourcePath =~ /\\/module-vendor\\/[^\\/]*$/ || resourcePath =~ /\\/modules\\/[^\\/]*$/ || resourcePath=~ /src\\/bean/)"
        },
        {
          "command": "zova.createToolBean",
          "when": "zova.hasZovaProject && explorerResourceIsFolder && (resourcePath =~ /\\/module\\/[^\\/]*$/ || resourcePath =~ /\\/module-vendor\\/[^\\/]*$/ || resourcePath =~ /\\/modules\\/[^\\/]*$/ || resourcePath=~ /src\\/bean/)"
        },
        {
          "command": "zova.createGeneralBean",
          "when": "zova.hasZovaProject && explorerResourceIsFolder && (resourcePath =~ /\\/module\\/[^\\/]*$/ || resourcePath =~ /\\/module-vendor\\/[^\\/]*$/ || resourcePath =~ /\\/modules\\/[^\\/]*$/ || resourcePath=~ /src\\/bean/)"
        },
        {
          "command": "zova.createComponent",
          "when": "zova.hasZovaProject && explorerResourceIsFolder && (resourcePath =~ /\\/module\\/[^\\/]*$/ || resourcePath =~ /\\/module-vendor\\/[^\\/]*$/ || resourcePath =~ /\\/modules\\/[^\\/]*$/ || resourcePath=~ /src\\/component$/)"
        },
        {
          "command": "zova.createPage",
          "when": "zova.hasZovaProject && explorerResourceIsFolder && (resourcePath =~ /\\/module\\/[^\\/]*$/ || resourcePath =~ /\\/module-vendor\\/[^\\/]*$/ || resourcePath =~ /\\/modules\\/[^\\/]*$/ || resourcePath=~ /src\\/page$/)"
        }
      ],
      "zova.init": [],
      "zova.tools": [
        {
          "command": "zova.toolsIcons",
          "when": "zova.hasZovaProject && explorerResourceIsFolder && (resourcePath =~ /\\/module\\/[^\\/]*$/ || resourcePath =~ /\\/module-vendor\\/[^\\/]*$/ || resourcePath =~ /\\/modules\\/[^\\/]*$/)"
        },
        {
          "command": "zova.toolsRes",
          "when": "zova.hasZovaProject && explorerResourceIsFolder && (resourcePath =~ /\\/module\\/[^\\/]*$/ || resourcePath =~ /\\/module-vendor\\/[^\\/]*$/ || resourcePath =~ /\\/modules\\/[^\\/]*$/ || resourcePath=~ /src\\/\\.res/)"
        }
      ]
    },
    "submenus": [
      {
        "id": "zova.create",
        "label": "Zova Create"
      },
      {
        "id": "zova.init",
        "label": "Zova Init"
      },
      {
        "id": "zova.tools",
        "label": "Zova Tools"
      }
    ]
  },
  "permissions": [
    "webview",
    "http"
  ],
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run check-types && pnpm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "pnpm run check-types && pnpm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "dependencies": {
    "@cabloy/process-helper": "^1.0.4",
    "fs-extra": "^11.2.0"
  },
  "devDependencies": {
    "@types/fs-extra": "^11.0.4",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "esbuild": "^0.21.5",
    "eslint": "^8.57.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.4.5"
  }
}
